generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id               String    @id @default(cuid())
  name             String?
  phone            String?
  email            String?   @unique
  emailVerified    DateTime?
  image            String?
  ads              Ad[]
  auctions         Auction[]
  bids             Bid[]
  favoriteAds      Ad[]      @relation("FavoriteAds")
  favoriteAuctions Auction[] @relation("FavoriteAuctions")
  accounts         Account[]
  sessions         Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Ad {
  id          String   @id @default(cuid())
  publishedAt DateTime @default(now())
  updatedAt   DateTime @updatedAt
  title       String
  description String?
  price       Int?
  image_URL   String?
  author      User     @relation(fields: [authorId], references: [id])
  authorId    String
  category    Category @relation(fields: [categoryId], references: [id])
  categoryId  String
  favoritedBy User[]   @relation("FavoriteAds")
}

model Category {
  id       String    @id @default(cuid())
  name     String
  ads      Ad[]
  auctions Auction[]
}

model Auction {
  id           String   @id @default(cuid())
  publishedAt  DateTime @default(now())
  updatedAt    DateTime @updatedAt
  title        String
  description  String?
  image_URL    String?
  deadlineTime BigInt
  author       User     @relation(fields: [authorId], references: [id])
  authorId     String
  category     Category @relation(fields: [categoryId], references: [id])
  categoryId   String
  favoritedBy  User[]   @relation("FavoriteAuctions")
  bids         Bid[]
}

model Bid {
  id        String   @id @default(cuid())
  amount    Int
  createdAt DateTime @default(now())
  auction   Auction  @relation(fields: [auctionId], references: [id], onDelete: Cascade)
  auctionId String
  bidder    User     @relation(fields: [bidderId], references: [id], onDelete: Cascade)
  bidderId  String
}
